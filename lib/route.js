// Generated by CoffeeScript 1.6.3
var Route;

module.exports = Route = (function() {
  var named_param_reg, optional_param_reg, splat_param_reg;

  Route.prototype.pattern = null;

  Route.prototype.runner = null;

  Route.prototype.destroyer = null;

  Route.prototype.dependency = null;

  Route.prototype.matcher = null;

  named_param_reg = /:\w+/g;

  splat_param_reg = /\*\w+/g;

  optional_param_reg = /\/(?:\:|\*)(\w+)\?/g;

  function Route(pattern, runner, destroyer, dependency) {
    this.pattern = pattern;
    this.runner = runner;
    this.destroyer = destroyer;
    this.dependency = dependency;
    if (this.pattern === '*') {
      this.matcher = /.*/;
    } else {
      this.matcher = pattern.replace(optional_param_reg, '(?:\/)?:$1?');
      this.matcher = this.matcher.replace(named_param_reg, '([^\/]+)');
      this.matcher = this.matcher.replace(splat_param_reg, '(.*?)');
      this.matcher = new RegExp("^" + this.matcher + "$", 'm');
    }
  }

  Route.prototype.extract_params = function(url) {
    var index, name, names, params, vals, _i, _len;
    names = this.pattern.match(/(?::|\*)(\w+)/g);
    if (names == null) {
      return {};
    }
    vals = url.match(this.matcher);
    params = {};
    for (index = _i = 0, _len = names.length; _i < _len; index = ++_i) {
      name = names[index];
      params[name.substr(1)] = vals[index + 1];
    }
    return params;
  };

  Route.prototype.rewrite_pattern = function(pattern, url) {
    var key, reg, value, _ref;
    _ref = this.extract_params(url);
    for (key in _ref) {
      value = _ref[key];
      reg = new RegExp("[\:\*]+" + key, 'g');
      pattern = pattern.replace(reg, value);
    }
    return pattern;
  };

  Route.prototype.computed_dependency = function(url) {
    return this.rewrite_pattern(this.dependency, url);
  };

  Route.prototype.run = function(url, done) {
    var req;
    req = {
      url: url,
      pattern: this.pattern,
      params: this.extract_params(url)
    };
    this.runner(req, done);
    return req;
  };

  Route.prototype.destroy = function(req, done) {
    return this.destroyer(req, done);
  };

  return Route;

})();
